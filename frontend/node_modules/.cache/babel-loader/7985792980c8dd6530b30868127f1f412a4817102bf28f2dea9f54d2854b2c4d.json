{"ast":null,"code":"var _jsxFileName = \"/Users/Florence/Desktop/HackCamp2024/frontend/src/puzzlePage.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Hardcoded Grid and Pairs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSize = 5;\nconst pairs = [{\n  id: 1,\n  color: 'red',\n  cells: [[0, 0], [4, 4]]\n}, {\n  id: 2,\n  color: 'blue',\n  cells: [[0, 1], [4, 3]]\n}, {\n  id: 3,\n  color: 'green',\n  cells: [[1, 1], [3, 3]]\n}, {\n  id: 4,\n  color: 'yellow',\n  cells: [[2, 2], [2, 3]]\n}];\nfunction App() {\n  _s();\n  // Initialize grid with empty cells\n  const [grid, setGrid] = useState(Array.from({\n    length: gridSize\n  }, () => Array(gridSize).fill(null)));\n  const [currentColor, setCurrentColor] = useState(null);\n\n  // Handle cell click\n  const handleCellClick = (row, col) => {\n    // Check if a color is selected\n    if (!currentColor) return;\n\n    // Create a new grid to avoid mutating state directly\n    const newGrid = grid.map((rowData, rowIndex) => rowData.map((cellData, colIndex) => rowIndex === row && colIndex === col ? currentColor : cellData));\n\n    // Find the pair for the selected color\n    const selectedPair = pairs.find(pair => pair.color === currentColor);\n    if (!selectedPair) return;\n\n    // Check if the clicked cell is part of the selected pair's path\n    const isInPath = selectedPair.cells.some(cell => cell[0] === row && cell[1] === col);\n    if (isInPath) {\n      // Update the cell color in the new grid\n      setGrid(newGrid);\n      // Reset current color after placing it on the grid\n      setCurrentColor(null);\n    }\n  };\n  // Render grid and puzzle setup\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flow Free - Hard Puzzle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${gridSize}, 50px)`,\n        gap: '2px' // Optional: adds space between cells for visibility\n      },\n      children: grid.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          width: '50px',\n          height: '50px',\n          backgroundColor: cell || 'lightgray',\n          border: '1px solid black'\n        },\n        onClick: () => handleCellClick(rowIndex, colIndex)\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), pairs.map(pair => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: pair.color,\n          color: 'white',\n          margin: '5px'\n        },\n        onClick: () => setCurrentColor(pair.color),\n        children: pair.color\n      }, pair.color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SkNTRSNZB3a4Y1JpLi5i68diFtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","gridSize","pairs","id","color","cells","App","_s","grid","setGrid","Array","from","length","fill","currentColor","setCurrentColor","handleCellClick","row","col","newGrid","map","rowData","rowIndex","cellData","colIndex","selectedPair","find","pair","isInPath","some","cell","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","width","height","backgroundColor","border","onClick","margin","_c","$RefreshReg$"],"sources":["/Users/Florence/Desktop/HackCamp2024/frontend/src/puzzlePage.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Hardcoded Grid and Pairs\nconst gridSize = 5;\nconst pairs = [\n  { id: 1, color: 'red', cells: [[0, 0], [4, 4]] },\n  { id: 2, color: 'blue', cells: [[0, 1], [4, 3]] },\n  { id: 3, color: 'green', cells: [[1, 1], [3, 3]] },\n  { id: 4, color: 'yellow', cells: [[2, 2], [2, 3]] },\n];\n\nfunction App() {\n  // Initialize grid with empty cells\n  const [grid, setGrid] = useState(\n    Array.from({ length: gridSize }, () => Array(gridSize).fill(null))\n  );\n  const [currentColor, setCurrentColor] = useState(null);\n\n  // Handle cell click\n  const handleCellClick = (row, col) => {\n    // Check if a color is selected\n    if (!currentColor) return;\n\n    // Create a new grid to avoid mutating state directly\n    const newGrid = grid.map((rowData, rowIndex) => \n      rowData.map((cellData, colIndex) => \n        rowIndex === row && colIndex === col ? currentColor : cellData\n      )\n    );\n\n    // Find the pair for the selected color\n    const selectedPair = pairs.find(pair => pair.color === currentColor);\n    if (!selectedPair) return;\n\n    // Check if the clicked cell is part of the selected pair's path\n    const isInPath = selectedPair.cells.some(cell => cell[0] === row && cell[1] === col);\n    if (isInPath) {\n      // Update the cell color in the new grid\n      setGrid(newGrid);\n      // Reset current color after placing it on the grid\n      setCurrentColor(null);\n    }\n  };\n// Render grid and puzzle setup\n  return (\n    <div className=\"App\">\n      <h1>Flow Free - Hard Puzzle</h1>\n      <div\n        className=\"grid\"\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${gridSize}, 50px)`,\n          gap: '2px', // Optional: adds space between cells for visibility\n        }}\n      >\n        {grid.map((row, rowIndex) =>\n          row.map((cell, colIndex) => (\n            <div\n              key={`${rowIndex}-${colIndex}`}\n              className=\"cell\"\n              style={{\n                width: '50px',\n                height: '50px',\n                backgroundColor: cell || 'lightgray',\n                border: '1px solid black',\n              }}\n              onClick={() => handleCellClick(rowIndex, colIndex)}\n            ></div>\n          ))\n        )}\n      </div>\n\n      <div className=\"controls\">\n        <h2>Select Color</h2>\n        {pairs.map(pair => (\n          <button\n            key={pair.color}\n            style={{ backgroundColor: pair.color, color: 'white', margin: '5px' }}\n            onClick={() => setCurrentColor(pair.color)}\n          >\n            {pair.color}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}